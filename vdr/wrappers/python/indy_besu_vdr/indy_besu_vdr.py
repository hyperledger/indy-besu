# Copyright (c) 2024 DSR Corporation, Denver, Colorado.
# https://www.dsr-corporation.com
# SPDX-License-Identifier: Apache-2.0



# This file was autogenerated by some hot garbage in the `uniffi` crate.
# Trust me, you don't want to mess with it!

# Common helper code.
#
# Ideally this would live in a separate .py file where it can be unittested etc
# in isolation, and perhaps even published as a re-useable package.
#
# However, it's important that the details of how this helper code works (e.g. the
# way that different builtin types are passed across the FFI) exactly match what's
# expected by the rust code on the other side of the interface. In practice right
# now that means coming from the exact some version of `uniffi` that was used to
# compile the rust component. The easiest way to ensure this is to bundle the Python
# helpers directly inline like we're doing here.

import os
import sys
import ctypes
import enum
import struct
import contextlib
import datetime
import typing
import asyncio
import platform

# Used for default argument values
_DEFAULT = object()


class _UniffiRustBuffer(ctypes.Structure):
    _fields_ = [
        ("capacity", ctypes.c_int32),
        ("len", ctypes.c_int32),
        ("data", ctypes.POINTER(ctypes.c_char)),
    ]

    @staticmethod
    def alloc(size):
        return _rust_call(_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_alloc, size)

    @staticmethod
    def reserve(rbuf, additional):
        return _rust_call(_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_reserve, rbuf, additional)

    def free(self):
        return _rust_call(_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_free, self)

    def __str__(self):
        return "_UniffiRustBuffer(capacity={}, len={}, data={})".format(
            self.capacity,
            self.len,
            self.data[0:self.len]
        )

    @contextlib.contextmanager
    def alloc_with_builder(*args):
        """Context-manger to allocate a buffer using a _UniffiRustBufferBuilder.

        The allocated buffer will be automatically freed if an error occurs, ensuring that
        we don't accidentally leak it.
        """
        builder = _UniffiRustBufferBuilder()
        try:
            yield builder
        except:
            builder.discard()
            raise

    @contextlib.contextmanager
    def consume_with_stream(self):
        """Context-manager to consume a buffer using a _UniffiRustBufferStream.

        The _UniffiRustBuffer will be freed once the context-manager exits, ensuring that we don't
        leak it even if an error occurs.
        """
        try:
            s = _UniffiRustBufferStream.from_rust_buffer(self)
            yield s
            if s.remaining() != 0:
                raise RuntimeError("junk data left in buffer at end of consume_with_stream")
        finally:
            self.free()

    @contextlib.contextmanager
    def read_with_stream(self):
        """Context-manager to read a buffer using a _UniffiRustBufferStream.

        This is like consume_with_stream, but doesn't free the buffer afterwards.
        It should only be used with borrowed `_UniffiRustBuffer` data.
        """
        s = _UniffiRustBufferStream.from_rust_buffer(self)
        yield s
        if s.remaining() != 0:
            raise RuntimeError("junk data left in buffer at end of read_with_stream")

class _UniffiForeignBytes(ctypes.Structure):
    _fields_ = [
        ("len", ctypes.c_int32),
        ("data", ctypes.POINTER(ctypes.c_char)),
    ]

    def __str__(self):
        return "_UniffiForeignBytes(len={}, data={})".format(self.len, self.data[0:self.len])


class _UniffiRustBufferStream:
    """
    Helper for structured reading of bytes from a _UniffiRustBuffer
    """

    def __init__(self, data, len):
        self.data = data
        self.len = len
        self.offset = 0

    @classmethod
    def from_rust_buffer(cls, buf):
        return cls(buf.data, buf.len)

    def remaining(self):
        return self.len - self.offset

    def _unpack_from(self, size, format):
        if self.offset + size > self.len:
            raise InternalError("read past end of rust buffer")
        value = struct.unpack(format, self.data[self.offset:self.offset+size])[0]
        self.offset += size
        return value

    def read(self, size):
        if self.offset + size > self.len:
            raise InternalError("read past end of rust buffer")
        data = self.data[self.offset:self.offset+size]
        self.offset += size
        return data

    def read_i8(self):
        return self._unpack_from(1, ">b")

    def read_u8(self):
        return self._unpack_from(1, ">B")

    def read_i16(self):
        return self._unpack_from(2, ">h")

    def read_u16(self):
        return self._unpack_from(2, ">H")

    def read_i32(self):
        return self._unpack_from(4, ">i")

    def read_u32(self):
        return self._unpack_from(4, ">I")

    def read_i64(self):
        return self._unpack_from(8, ">q")

    def read_u64(self):
        return self._unpack_from(8, ">Q")

    def read_float(self):
        v = self._unpack_from(4, ">f")
        return v

    def read_double(self):
        return self._unpack_from(8, ">d")

    def read_c_size_t(self):
        return self._unpack_from(ctypes.sizeof(ctypes.c_size_t) , "@N")

class _UniffiRustBufferBuilder:
    """
    Helper for structured writing of bytes into a _UniffiRustBuffer.
    """

    def __init__(self):
        self.rbuf = _UniffiRustBuffer.alloc(16)
        self.rbuf.len = 0

    def finalize(self):
        rbuf = self.rbuf
        self.rbuf = None
        return rbuf

    def discard(self):
        if self.rbuf is not None:
            rbuf = self.finalize()
            rbuf.free()

    @contextlib.contextmanager
    def _reserve(self, num_bytes):
        if self.rbuf.len + num_bytes > self.rbuf.capacity:
            self.rbuf = _UniffiRustBuffer.reserve(self.rbuf, num_bytes)
        yield None
        self.rbuf.len += num_bytes

    def _pack_into(self, size, format, value):
        with self._reserve(size):
            # XXX TODO: I feel like I should be able to use `struct.pack_into` here but can't figure it out.
            for i, byte in enumerate(struct.pack(format, value)):
                self.rbuf.data[self.rbuf.len + i] = byte

    def write(self, value):
        with self._reserve(len(value)):
            for i, byte in enumerate(value):
                self.rbuf.data[self.rbuf.len + i] = byte

    def write_i8(self, v):
        self._pack_into(1, ">b", v)

    def write_u8(self, v):
        self._pack_into(1, ">B", v)

    def write_i16(self, v):
        self._pack_into(2, ">h", v)

    def write_u16(self, v):
        self._pack_into(2, ">H", v)

    def write_i32(self, v):
        self._pack_into(4, ">i", v)

    def write_u32(self, v):
        self._pack_into(4, ">I", v)

    def write_i64(self, v):
        self._pack_into(8, ">q", v)

    def write_u64(self, v):
        self._pack_into(8, ">Q", v)

    def write_float(self, v):
        self._pack_into(4, ">f", v)

    def write_double(self, v):
        self._pack_into(8, ">d", v)

    def write_c_size_t(self, v):
        self._pack_into(ctypes.sizeof(ctypes.c_size_t) , "@N", v)
# A handful of classes and functions to support the generated data structures.
# This would be a good candidate for isolating in its own ffi-support lib.

class InternalError(Exception):
    pass

class _UniffiRustCallStatus(ctypes.Structure):
    """
    Error runtime.
    """
    _fields_ = [
        ("code", ctypes.c_int8),
        ("error_buf", _UniffiRustBuffer),
    ]

    # These match the values from the uniffi::rustcalls module
    CALL_SUCCESS = 0
    CALL_ERROR = 1
    CALL_PANIC = 2

    def __str__(self):
        if self.code == _UniffiRustCallStatus.CALL_SUCCESS:
            return "_UniffiRustCallStatus(CALL_SUCCESS)"
        elif self.code == _UniffiRustCallStatus.CALL_ERROR:
            return "_UniffiRustCallStatus(CALL_ERROR)"
        elif self.code == _UniffiRustCallStatus.CALL_PANIC:
            return "_UniffiRustCallStatus(CALL_PANIC)"
        else:
            return "_UniffiRustCallStatus(<invalid code>)"

def _rust_call(fn, *args):
    # Call a rust function
    return _rust_call_with_error(None, fn, *args)

def _rust_call_with_error(error_ffi_converter, fn, *args):
    # Call a rust function and handle any errors
    #
    # This function is used for rust calls that return Result<> and therefore can set the CALL_ERROR status code.
    # error_ffi_converter must be set to the _UniffiConverter for the error class that corresponds to the result.
    call_status = _UniffiRustCallStatus(code=_UniffiRustCallStatus.CALL_SUCCESS, error_buf=_UniffiRustBuffer(0, 0, None))

    args_with_error = args + (ctypes.byref(call_status),)
    result = fn(*args_with_error)
    _uniffi_check_call_status(error_ffi_converter, call_status)
    return result

def _uniffi_check_call_status(error_ffi_converter, call_status):
    if call_status.code == _UniffiRustCallStatus.CALL_SUCCESS:
        pass
    elif call_status.code == _UniffiRustCallStatus.CALL_ERROR:
        if error_ffi_converter is None:
            call_status.error_buf.free()
            raise InternalError("_rust_call_with_error: CALL_ERROR, but error_ffi_converter is None")
        else:
            raise error_ffi_converter.lift(call_status.error_buf)
    elif call_status.code == _UniffiRustCallStatus.CALL_PANIC:
        # When the rust code sees a panic, it tries to construct a _UniffiRustBuffer
        # with the message.  But if that code panics, then it just sends back
        # an empty buffer.
        if call_status.error_buf.len > 0:
            msg = _UniffiConverterString.lift(call_status.error_buf)
        else:
            msg = "Unknown rust panic"
        raise InternalError(msg)
    else:
        raise InternalError("Invalid _UniffiRustCallStatus code: {}".format(
            call_status.code))

# A function pointer for a callback as defined by UniFFI.
# Rust definition `fn(handle: u64, method: u32, args: _UniffiRustBuffer, buf_ptr: *mut _UniffiRustBuffer) -> int`
_UNIFFI_FOREIGN_CALLBACK_T = ctypes.CFUNCTYPE(ctypes.c_int, ctypes.c_ulonglong, ctypes.c_ulong, ctypes.POINTER(ctypes.c_char), ctypes.c_int, ctypes.POINTER(_UniffiRustBuffer))

# UniFFI future continuation
_UNIFFI_FUTURE_CONTINUATION_T = ctypes.CFUNCTYPE(None, ctypes.c_size_t, ctypes.c_int8)

class _UniffiPointerManagerCPython:
    """
    Manage giving out pointers to Python objects on CPython

    This class is used to generate opaque pointers that reference Python objects to pass to Rust.
    It assumes a CPython platform.  See _UniffiPointerManagerGeneral for the alternative.
    """

    def new_pointer(self, obj):
        """
        Get a pointer for an object as a ctypes.c_size_t instance

        Each call to new_pointer() must be balanced with exactly one call to release_pointer()

        This returns a ctypes.c_size_t.  This is always the same size as a pointer and can be
        interchanged with pointers for FFI function arguments and return values.
        """
        # IncRef the object since we're going to pass a pointer to Rust
        ctypes.pythonapi.Py_IncRef(ctypes.py_object(obj))
        # id() is the object address on CPython
        # (https://docs.python.org/3/library/functions.html#id)
        return id(obj)

    def release_pointer(self, address):
        py_obj = ctypes.cast(address, ctypes.py_object)
        obj = py_obj.value
        ctypes.pythonapi.Py_DecRef(py_obj)
        return obj

    def lookup(self, address):
        return ctypes.cast(address, ctypes.py_object).value

class _UniffiPointerManagerGeneral:
    """
    Manage giving out pointers to Python objects on non-CPython platforms

    This has the same API as _UniffiPointerManagerCPython, but doesn't assume we're running on
    CPython and is slightly slower.

    Instead of using real pointers, it maps integer values to objects and returns the keys as
    c_size_t values.
    """

    def __init__(self):
        self._map = {}
        self._lock = threading.Lock()
        self._current_handle = 0

    def new_pointer(self, obj):
        with self._lock:
            handle = self._current_handle
            self._current_handle += 1
            self._map[handle] = obj
        return handle

    def release_pointer(self, handle):
        with self._lock:
            return self._map.pop(handle)

    def lookup(self, handle):
        with self._lock:
            return self._map[handle]

# Pick an pointer manager implementation based on the platform
if platform.python_implementation() == 'CPython':
    _UniffiPointerManager = _UniffiPointerManagerCPython # type: ignore
else:
    _UniffiPointerManager = _UniffiPointerManagerGeneral # type: ignore
# Types conforming to `_UniffiConverterPrimitive` pass themselves directly over the FFI.
class _UniffiConverterPrimitive:
    @classmethod
    def lift(cls, value):
        return value
 
    @classmethod
    def lower(cls, value):
        return value

class _UniffiConverterPrimitiveInt(_UniffiConverterPrimitive):
    @classmethod
    def check_lower(cls, value):
        try:
            value = value.__index__()
        except Exception:
            raise TypeError("'{}' object cannot be interpreted as an integer".format(type(value).__name__))
        if not isinstance(value, int):
            raise TypeError("__index__ returned non-int (type {})".format(type(value).__name__))
        if not cls.VALUE_MIN <= value < cls.VALUE_MAX:
            raise ValueError("{} requires {} <= value < {}".format(cls.CLASS_NAME, cls.VALUE_MIN, cls.VALUE_MAX))

class _UniffiConverterPrimitiveFloat(_UniffiConverterPrimitive):
    @classmethod
    def check_lower(cls, value):
        try:
            value = value.__float__()
        except Exception:
            raise TypeError("must be real number, not {}".format(type(value).__name__))
        if not isinstance(value, float):
            raise TypeError("__float__ returned non-float (type {})".format(type(value).__name__))

# Helper class for wrapper types that will always go through a _UniffiRustBuffer.
# Classes should inherit from this and implement the `read` and `write` static methods.
class _UniffiConverterRustBuffer:
    @classmethod
    def lift(cls, rbuf):
        with rbuf.consume_with_stream() as stream:
            return cls.read(stream)

    @classmethod
    def lower(cls, value):
        with _UniffiRustBuffer.alloc_with_builder() as builder:
            cls.write(value, builder)
            return builder.finalize()

# Contains loading, initialization code, and the FFI Function declarations.
# Define some ctypes FFI types that we use in the library

"""
Function pointer for a Rust task, which a callback function that takes a opaque pointer
"""
_UNIFFI_RUST_TASK = ctypes.CFUNCTYPE(None, ctypes.c_void_p, ctypes.c_int8)

def _uniffi_future_callback_t(return_type):
    """
    Factory function to create callback function types for async functions
    """
    return ctypes.CFUNCTYPE(None, ctypes.c_size_t, return_type, _UniffiRustCallStatus)

def _uniffi_load_indirect():
    """
    This is how we find and load the dynamic library provided by the component.
    For now we just look it up by name.
    """
    if sys.platform == "darwin":
        libname = "lib{}.dylib"
    elif sys.platform.startswith("win"):
        # As of python3.8, ctypes does not seem to search $PATH when loading DLLs.
        # We could use `os.add_dll_directory` to configure the search path, but
        # it doesn't feel right to mess with application-wide settings. Let's
        # assume that the `.dll` is next to the `.py` file and load by full path.
        libname = os.path.join(
            os.path.dirname(__file__),
            "{}.dll",
        )
    else:
        # Anything else must be an ELF platform - Linux, *BSD, Solaris/illumos
        libname = "lib{}.so"

    libname = libname.format("indy_besu_vdr_uniffi")
    path = os.path.join(os.path.dirname(__file__), libname)
    lib = ctypes.cdll.LoadLibrary(path)
    return lib

def _uniffi_check_contract_api_version(lib):
    # Get the bindings contract version from our ComponentInterface
    bindings_contract_version = 25
    # Get the scaffolding contract version by calling the into the dylib
    scaffolding_contract_version = lib.ffi_indy_besu_vdr_uniffi_uniffi_contract_version()
    if bindings_contract_version != scaffolding_contract_version:
        raise InternalError("UniFFI contract version mismatch: try cleaning and rebuilding your project")

def _uniffi_check_api_checksums(lib):
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_add_validator_transaction() != 49434:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_assign_role_transaction() != 19303:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_endorsing_data() != 31555:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_transaction() != 48372:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_endorsing_data() != 19847:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_endorsing_data() != 3412:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_transaction() != 64659:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_transaction() != 17427:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_endorsing_data() != 38201:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_transaction() != 6041:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_endorsing_data() != 24765:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_transaction() != 22681:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_endorsing_data() != 10435:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_transaction() != 52605:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_endorsing_data() != 24694:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_transaction() != 578:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_endorsing_data() != 46497:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_transaction() != 30801:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_endorsing_data() != 54740:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_transaction() != 63668:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_endorsing_data() != 50029:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_transaction() != 52636:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_endorsing_data() != 23389:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_transaction() != 60165:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_endorsement_transaction() != 7484:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_changed_transaction() != 53752:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_events_query() != 7741:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_mapping_transaction() != 14270:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_owner_transaction() != 51424:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_identity_nonce_transaction() != 6229:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_resource_mapping_transaction() != 48831:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_role_transaction() != 23984:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_validators_transaction() != 49058:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_has_role_transaction() != 21081:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_remove_validator_transaction() != 65518:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_credential_definition_transaction() != 22183:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_did_transaction() != 30138:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_schema_transaction() != 23161:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_revoke_role_transaction() != 31148:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_endorsing_data() != 33282:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_transaction() != 54343:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_from_string() != 58541:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_get_id() != 41473:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_to_string() != 10206:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_attribute_changed_event_response() != 27285:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_changed_result() != 11223:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_delegate_changed_event_response() != 48798:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_event_response() != 5583:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_mapping_result() != 26573:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_nonce_result() != 38919:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_changed_event_response() != 45369:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_result() != 11739:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_role_result() != 24565:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_validators_result() != 47252:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_has_role_result() != 16372:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_credential_definition_result() != 21671:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_did_result() != 27898:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_schema_result() != 64693:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resource_mapping_result() != 47018:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_credential_definition() != 55906:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_did() != 45456:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_schema() != 2703:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_from_string() != 25235:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_get_id() != 23981:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_to_string() != 46812:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_create() != 37606:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_create() != 21138:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_from_string() != 34627:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_get_signing_bytes() != 44811:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_to_string() != 63969:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_from_string() != 62148:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_get_signing_bytes() != 41505:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_to_string() != 21025:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_get_receipt() != 56453:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_ping() != 64834:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_query_events() != 64611:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_submit_transaction() != 22126:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")
    if lib.uniffi_indy_besu_vdr_uniffi_checksum_constructor_ledgerclient_new() != 954:
        raise InternalError("UniFFI API checksum mismatch: try cleaning and rebuilding your project")

# A ctypes library to expose the extern-C FFI definitions.
# This is an implementation detail which will be called internally by the public API.

_UniffiLib = _uniffi_load_indirect()
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_clone_ledgerclient.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_clone_ledgerclient.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_free_ledgerclient.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_free_ledgerclient.restype = None
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_constructor_ledgerclient_new.argtypes = (
    ctypes.c_uint64,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_constructor_ledgerclient_new.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_get_receipt.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_get_receipt.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_ping.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_ping.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_query_events.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_query_events.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_submit_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_submit_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_add_validator_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_add_validator_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_assign_role_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.c_uint8,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_assign_role_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.c_uint64,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.c_uint64,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.c_uint64,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.c_uint64,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_endorsement_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_endorsement_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_changed_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_changed_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_events_query.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_events_query.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_mapping_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_mapping_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_owner_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_owner_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_identity_nonce_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_identity_nonce_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_resource_mapping_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_resource_mapping_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_role_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_role_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_validators_transaction.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_validators_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_has_role_transaction.argtypes = (
    ctypes.c_void_p,
    ctypes.c_uint8,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_has_role_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_remove_validator_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_remove_validator_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_credential_definition_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_credential_definition_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_did_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_did_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_schema_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_schema_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_revoke_role_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.c_uint8,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_revoke_role_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_endorsing_data.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_endorsing_data.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_transaction.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_transaction.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_from_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_from_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_get_id.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_get_id.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_to_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_to_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_attribute_changed_event_response.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_attribute_changed_event_response.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_changed_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_changed_result.restype = ctypes.c_uint64
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_delegate_changed_event_response.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_delegate_changed_event_response.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_event_response.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_event_response.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_mapping_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_mapping_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_nonce_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_nonce_result.restype = ctypes.c_uint64
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_changed_event_response.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_changed_event_response.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_role_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_role_result.restype = ctypes.c_uint8
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_validators_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_validators_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_has_role_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_has_role_result.restype = ctypes.c_int8
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_credential_definition_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_credential_definition_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_did_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_did_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_schema_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_schema_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resource_mapping_result.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resource_mapping_result.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_credential_definition.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_credential_definition.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_did.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_did.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_schema.argtypes = (
    ctypes.c_void_p,
    _UniffiRustBuffer,
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_schema.restype = ctypes.c_void_p
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_from_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_from_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_get_id.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_get_id.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_to_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_to_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_create.argtypes = (
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.c_uint64,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_create.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_create.argtypes = (
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_create.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_from_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_from_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_get_signing_bytes.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_get_signing_bytes.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_to_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_to_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_from_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_from_string.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_get_signing_bytes.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_get_signing_bytes.restype = _UniffiRustBuffer
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_to_string.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_to_string.restype = _UniffiRustBuffer
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_alloc.argtypes = (
    ctypes.c_int32,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_alloc.restype = _UniffiRustBuffer
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_from_bytes.argtypes = (
    _UniffiForeignBytes,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_from_bytes.restype = _UniffiRustBuffer
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_free.argtypes = (
    _UniffiRustBuffer,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_free.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_reserve.argtypes = (
    _UniffiRustBuffer,
    ctypes.c_int32,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rustbuffer_reserve.restype = _UniffiRustBuffer
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u8.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u8.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u8.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u8.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u8.restype = ctypes.c_uint8
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i8.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i8.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i8.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i8.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i8.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i8.restype = ctypes.c_int8
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u16.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u16.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u16.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u16.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u16.restype = ctypes.c_uint16
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i16.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i16.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i16.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i16.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i16.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i16.restype = ctypes.c_int16
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u32.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u32.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u32.restype = ctypes.c_uint32
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i32.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i32.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i32.restype = ctypes.c_int32
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u64.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_u64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_u64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_u64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u64.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_u64.restype = ctypes.c_uint64
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i64.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_i64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_i64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_i64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i64.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_i64.restype = ctypes.c_int64
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_f32.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_f32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_f32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_f32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_f32.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_f32.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_f32.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_f32.restype = ctypes.c_float
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_f64.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_f64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_f64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_f64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_f64.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_f64.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_f64.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_f64.restype = ctypes.c_double
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_pointer.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_pointer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_pointer.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_pointer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_pointer.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_pointer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_pointer.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_pointer.restype = ctypes.c_void_p
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_rust_buffer.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_rust_buffer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer.restype = _UniffiRustBuffer
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_void.argtypes = (
    ctypes.c_void_p,
    _UNIFFI_FUTURE_CONTINUATION_T,
    ctypes.c_size_t,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_void.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_void.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_cancel_void.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_void.argtypes = (
    ctypes.c_void_p,
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_void.restype = None
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_void.argtypes = (
    ctypes.c_void_p,
    ctypes.POINTER(_UniffiRustCallStatus),
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_void.restype = None
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_add_validator_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_add_validator_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_assign_role_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_assign_role_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_credential_definition_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_mapping_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_did_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_resource_mapping_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_create_schema_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_deactivate_did_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_add_delegate_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_change_owner_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_attribute_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_revoke_delegate_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_did_set_attribute_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_endorsement_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_endorsement_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_changed_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_changed_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_events_query.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_events_query.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_mapping_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_mapping_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_owner_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_did_owner_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_identity_nonce_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_identity_nonce_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_resource_mapping_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_resource_mapping_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_role_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_role_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_validators_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_get_validators_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_has_role_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_has_role_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_remove_validator_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_remove_validator_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_credential_definition_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_credential_definition_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_did_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_did_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_schema_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_resolve_schema_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_revoke_role_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_revoke_role_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_endorsing_data.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_endorsing_data.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_build_update_did_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_from_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_from_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_get_id.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_get_id.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_to_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_credential_definition_to_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_attribute_changed_event_response.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_attribute_changed_event_response.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_changed_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_changed_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_delegate_changed_event_response.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_delegate_changed_event_response.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_event_response.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_event_response.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_mapping_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_mapping_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_nonce_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_nonce_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_changed_event_response.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_changed_event_response.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_did_owner_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_role_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_role_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_validators_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_get_validators_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_has_role_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_has_role_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_credential_definition_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_credential_definition_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_did_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_did_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_schema_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resolve_schema_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resource_mapping_result.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_parse_resource_mapping_result.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_credential_definition.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_credential_definition.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_did.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_did.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_schema.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_resolve_schema.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_from_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_from_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_get_id.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_get_id.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_to_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_schema_to_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_create.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_create.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_create.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_create.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_from_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_from_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_get_signing_bytes.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_get_signing_bytes.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_to_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_endorsing_data_to_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_from_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_from_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_get_signing_bytes.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_get_signing_bytes.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_to_string.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_func_transaction_to_string.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_get_receipt.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_get_receipt.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_ping.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_ping.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_query_events.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_query_events.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_submit_transaction.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_method_ledgerclient_submit_transaction.restype = ctypes.c_uint16
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_constructor_ledgerclient_new.argtypes = (
)
_UniffiLib.uniffi_indy_besu_vdr_uniffi_checksum_constructor_ledgerclient_new.restype = ctypes.c_uint16
_UniffiLib.ffi_indy_besu_vdr_uniffi_uniffi_contract_version.argtypes = (
)
_UniffiLib.ffi_indy_besu_vdr_uniffi_uniffi_contract_version.restype = ctypes.c_uint32
_uniffi_check_contract_api_version(_UniffiLib)
_uniffi_check_api_checksums(_UniffiLib)

# Async support# RustFuturePoll values
_UNIFFI_RUST_FUTURE_POLL_READY = 0
_UNIFFI_RUST_FUTURE_POLL_MAYBE_READY = 1

# Stores futures for _uniffi_continuation_callback
_UniffiContinuationPointerManager = _UniffiPointerManager()

# Continuation callback for async functions
# lift the return value or error and resolve the future, causing the async function to resume.
@_UNIFFI_FUTURE_CONTINUATION_T
def _uniffi_continuation_callback(future_ptr, poll_code):
    (eventloop, future) = _UniffiContinuationPointerManager.release_pointer(future_ptr)
    eventloop.call_soon_threadsafe(_uniffi_set_future_result, future, poll_code)

def _uniffi_set_future_result(future, poll_code):
    if not future.cancelled():
        future.set_result(poll_code)

async def _uniffi_rust_call_async(rust_future, ffi_poll, ffi_complete, ffi_free, lift_func, error_ffi_converter):
    try:
        eventloop = asyncio.get_running_loop()

        # Loop and poll until we see a _UNIFFI_RUST_FUTURE_POLL_READY value
        while True:
            future = eventloop.create_future()
            ffi_poll(
                rust_future,
                _uniffi_continuation_callback,
                _UniffiContinuationPointerManager.new_pointer((eventloop, future)),
            )
            poll_code = await future
            if poll_code == _UNIFFI_RUST_FUTURE_POLL_READY:
                break

        return lift_func(
            _rust_call_with_error(error_ffi_converter, ffi_complete, rust_future)
        )
    finally:
        ffi_free(rust_future)

# Public interface members begin here.


class _UniffiConverterUInt8(_UniffiConverterPrimitiveInt):
    CLASS_NAME = "u8"
    VALUE_MIN = 0
    VALUE_MAX = 2**8

    @staticmethod
    def read(buf):
        return buf.read_u8()

    @staticmethod
    def write(value, buf):
        buf.write_u8(value)

class _UniffiConverterUInt64(_UniffiConverterPrimitiveInt):
    CLASS_NAME = "u64"
    VALUE_MIN = 0
    VALUE_MAX = 2**64

    @staticmethod
    def read(buf):
        return buf.read_u64()

    @staticmethod
    def write(value, buf):
        buf.write_u64(value)

class _UniffiConverterBool:
    @classmethod
    def check_lower(cls, value):
        return not not value

    @classmethod
    def lower(cls, value):
        return 1 if value else 0

    @staticmethod
    def lift(value):
        return value != 0

    @classmethod
    def read(cls, buf):
        return cls.lift(buf.read_u8())

    @classmethod
    def write(cls, value, buf):
        buf.write_u8(value)

class _UniffiConverterString:
    @staticmethod
    def check_lower(value):
        if not isinstance(value, str):
            raise TypeError("argument must be str, not {}".format(type(value).__name__))
        return value

    @staticmethod
    def read(buf):
        size = buf.read_i32()
        if size < 0:
            raise InternalError("Unexpected negative string length")
        utf8_bytes = buf.read(size)
        return utf8_bytes.decode("utf-8")

    @staticmethod
    def write(value, buf):
        utf8_bytes = value.encode("utf-8")
        buf.write_i32(len(utf8_bytes))
        buf.write(utf8_bytes)

    @staticmethod
    def lift(buf):
        with buf.consume_with_stream() as stream:
            return stream.read(stream.remaining()).decode("utf-8")

    @staticmethod
    def lower(value):
        with _UniffiRustBuffer.alloc_with_builder() as builder:
            builder.write(value.encode("utf-8"))
            return builder.finalize()

class _UniffiConverterBytes(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        size = buf.read_i32()
        if size < 0:
            raise InternalError("Unexpected negative byte string length")
        return buf.read(size)

    @staticmethod
    def check_lower(value):
        try:
            memoryview(value)
        except TypeError:
            raise TypeError("a bytes-like object is required, not {!r}".format(type(value).__name__))

    @staticmethod
    def write(value, buf):
        buf.write_i32(len(value))
        buf.write(value)



class LedgerClientProtocol(typing.Protocol):
    def get_receipt(self, hash: "bytes"):
        raise NotImplementedError
    def ping(self, ):
        raise NotImplementedError
    def query_events(self, query: "EventQuery"):
        raise NotImplementedError
    def submit_transaction(self, transaction: "Transaction"):
        raise NotImplementedError

class LedgerClient:

    _pointer: ctypes.c_void_p
    def __init__(self, chain_id: "int",node_address: "str",contract_configs: "typing.List[ContractConfig]",network: "typing.Optional[str]",quorum_config: "typing.Optional[QuorumConfig]"):
        _UniffiConverterUInt64.check_lower(chain_id)
        
        _UniffiConverterString.check_lower(node_address)
        
        _UniffiConverterSequenceTypeContractConfig.check_lower(contract_configs)
        
        _UniffiConverterOptionalString.check_lower(network)
        
        _UniffiConverterOptionalTypeQuorumConfig.check_lower(quorum_config)
        
        self._pointer = _rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_constructor_ledgerclient_new,
        _UniffiConverterUInt64.lower(chain_id),
        _UniffiConverterString.lower(node_address),
        _UniffiConverterSequenceTypeContractConfig.lower(contract_configs),
        _UniffiConverterOptionalString.lower(network),
        _UniffiConverterOptionalTypeQuorumConfig.lower(quorum_config))

    def __del__(self):
        # In case of partial initialization of instances.
        pointer = getattr(self, "_pointer", None)
        if pointer is not None:
            _rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_free_ledgerclient, pointer)

    def _uniffi_clone_pointer(self):
        return _rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_clone_ledgerclient, self._pointer)

    # Used by alternative constructors or any methods which return this type.
    @classmethod
    def _make_instance_(cls, pointer):
        # Lightly yucky way to bypass the usual __init__ logic
        # and just create a new instance with the required pointer.
        inst = cls.__new__(cls)
        inst._pointer = pointer
        return inst


    def get_receipt(self, hash: "bytes"):
        _UniffiConverterBytes.check_lower(hash)
        
        return _uniffi_rust_call_async(
            _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_get_receipt(
                self._uniffi_clone_pointer(), 
        _UniffiConverterBytes.lower(hash)
            ),
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
            # lift function
            _UniffiConverterString.lift,
            # Error FFI converter
            _UniffiConverterTypeVdrError,
        )





    def ping(self, ):
        return _uniffi_rust_call_async(
            _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_ping(
                self._uniffi_clone_pointer(), 
            ),
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
            # lift function
            _UniffiConverterTypePingStatus.lift,
            # Error FFI converter
            _UniffiConverterTypeVdrError,
        )





    def query_events(self, query: "EventQuery"):
        _UniffiConverterTypeEventQuery.check_lower(query)
        
        return _uniffi_rust_call_async(
            _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_query_events(
                self._uniffi_clone_pointer(), 
        _UniffiConverterTypeEventQuery.lower(query)
            ),
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
            # lift function
            _UniffiConverterSequenceTypeEventLog.lift,
            # Error FFI converter
            _UniffiConverterTypeVdrError,
        )





    def submit_transaction(self, transaction: "Transaction"):
        _UniffiConverterTypeTransaction.check_lower(transaction)
        
        return _uniffi_rust_call_async(
            _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_method_ledgerclient_submit_transaction(
                self._uniffi_clone_pointer(), 
        _UniffiConverterTypeTransaction.lower(transaction)
            ),
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
            _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
            # lift function
            _UniffiConverterBytes.lift,
            # Error FFI converter
            _UniffiConverterTypeVdrError,
        )




class _UniffiConverterTypeLedgerClient:

    @staticmethod
    def lift(value: int):
        return LedgerClient._make_instance_(value)

    @staticmethod
    def check_lower(value: LedgerClient):
        if not isinstance(value, LedgerClient):
            raise TypeError("Expected LedgerClient instance, {} found".format(type(value).__name__))

    @staticmethod
    def lower(value: LedgerClientProtocol):
        if not isinstance(value, LedgerClient):
            raise TypeError("Expected LedgerClient instance, {} found".format(type(value).__name__))
        return value._uniffi_clone_pointer()

    @classmethod
    def read(cls, buf: _UniffiRustBuffer):
        ptr = buf.read_u64()
        if ptr == 0:
            raise InternalError("Raw pointer value was null")
        return cls.lift(ptr)

    @classmethod
    def write(cls, value: LedgerClientProtocol, buf: _UniffiRustBuffer):
        buf.write_u64(cls.lower(value))


class ContractConfig:
    address: "str"
    spec_path: "typing.Optional[str]"
    spec: "typing.Optional[ContractSpec]"
    @typing.no_type_check
    def __init__(self, address: "str", spec_path: "typing.Optional[str]", spec: "typing.Optional[ContractSpec]"):
        self.address = address
        self.spec_path = spec_path
        self.spec = spec

    def __str__(self):
        return "ContractConfig(address={}, spec_path={}, spec={})".format(self.address, self.spec_path, self.spec)

    def __eq__(self, other):
        if self.address != other.address:
            return False
        if self.spec_path != other.spec_path:
            return False
        if self.spec != other.spec:
            return False
        return True

class _UniffiConverterTypeContractConfig(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return ContractConfig(
            address=_UniffiConverterString.read(buf),
            spec_path=_UniffiConverterOptionalString.read(buf),
            spec=_UniffiConverterOptionalTypeContractSpec.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.address)
        _UniffiConverterOptionalString.check_lower(value.spec_path)
        _UniffiConverterOptionalTypeContractSpec.check_lower(value.spec)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.address, buf)
        _UniffiConverterOptionalString.write(value.spec_path, buf)
        _UniffiConverterOptionalTypeContractSpec.write(value.spec, buf)


class ContractSpec:
    name: "str"
    abi: "JsonValue"
    @typing.no_type_check
    def __init__(self, name: "str", abi: "JsonValue"):
        self.name = name
        self.abi = abi

    def __str__(self):
        return "ContractSpec(name={}, abi={})".format(self.name, self.abi)

    def __eq__(self, other):
        if self.name != other.name:
            return False
        if self.abi != other.abi:
            return False
        return True

class _UniffiConverterTypeContractSpec(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return ContractSpec(
            name=_UniffiConverterString.read(buf),
            abi=_UniffiConverterTypeJsonValue.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.name)
        _UniffiConverterTypeJsonValue.check_lower(value.abi)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.name, buf)
        _UniffiConverterTypeJsonValue.write(value.abi, buf)


class CredentialDefinition:
    issuer_id: "str"
    schema_id: "str"
    cred_def_type: "str"
    tag: "str"
    value: "JsonValue"
    @typing.no_type_check
    def __init__(self, issuer_id: "str", schema_id: "str", cred_def_type: "str", tag: "str", value: "JsonValue"):
        self.issuer_id = issuer_id
        self.schema_id = schema_id
        self.cred_def_type = cred_def_type
        self.tag = tag
        self.value = value

    def __str__(self):
        return "CredentialDefinition(issuer_id={}, schema_id={}, cred_def_type={}, tag={}, value={})".format(self.issuer_id, self.schema_id, self.cred_def_type, self.tag, self.value)

    def __eq__(self, other):
        if self.issuer_id != other.issuer_id:
            return False
        if self.schema_id != other.schema_id:
            return False
        if self.cred_def_type != other.cred_def_type:
            return False
        if self.tag != other.tag:
            return False
        if self.value != other.value:
            return False
        return True

class _UniffiConverterTypeCredentialDefinition(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return CredentialDefinition(
            issuer_id=_UniffiConverterString.read(buf),
            schema_id=_UniffiConverterString.read(buf),
            cred_def_type=_UniffiConverterString.read(buf),
            tag=_UniffiConverterString.read(buf),
            value=_UniffiConverterTypeJsonValue.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.issuer_id)
        _UniffiConverterString.check_lower(value.schema_id)
        _UniffiConverterString.check_lower(value.cred_def_type)
        _UniffiConverterString.check_lower(value.tag)
        _UniffiConverterTypeJsonValue.check_lower(value.value)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.issuer_id, buf)
        _UniffiConverterString.write(value.schema_id, buf)
        _UniffiConverterString.write(value.cred_def_type, buf)
        _UniffiConverterString.write(value.tag, buf)
        _UniffiConverterTypeJsonValue.write(value.value, buf)


class DidAttributeChanged:
    identity: "str"
    name: "str"
    value: "bytes"
    valid_to: "int"
    previous_change: "int"
    @typing.no_type_check
    def __init__(self, identity: "str", name: "str", value: "bytes", valid_to: "int", previous_change: "int"):
        self.identity = identity
        self.name = name
        self.value = value
        self.valid_to = valid_to
        self.previous_change = previous_change

    def __str__(self):
        return "DidAttributeChanged(identity={}, name={}, value={}, valid_to={}, previous_change={})".format(self.identity, self.name, self.value, self.valid_to, self.previous_change)

    def __eq__(self, other):
        if self.identity != other.identity:
            return False
        if self.name != other.name:
            return False
        if self.value != other.value:
            return False
        if self.valid_to != other.valid_to:
            return False
        if self.previous_change != other.previous_change:
            return False
        return True

class _UniffiConverterTypeDidAttributeChanged(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return DidAttributeChanged(
            identity=_UniffiConverterString.read(buf),
            name=_UniffiConverterString.read(buf),
            value=_UniffiConverterBytes.read(buf),
            valid_to=_UniffiConverterUInt64.read(buf),
            previous_change=_UniffiConverterUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.identity)
        _UniffiConverterString.check_lower(value.name)
        _UniffiConverterBytes.check_lower(value.value)
        _UniffiConverterUInt64.check_lower(value.valid_to)
        _UniffiConverterUInt64.check_lower(value.previous_change)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.identity, buf)
        _UniffiConverterString.write(value.name, buf)
        _UniffiConverterBytes.write(value.value, buf)
        _UniffiConverterUInt64.write(value.valid_to, buf)
        _UniffiConverterUInt64.write(value.previous_change, buf)


class DidDelegateChanged:
    identity: "str"
    delegate: "str"
    delegate_type: "bytes"
    valid_to: "int"
    previous_change: "int"
    @typing.no_type_check
    def __init__(self, identity: "str", delegate: "str", delegate_type: "bytes", valid_to: "int", previous_change: "int"):
        self.identity = identity
        self.delegate = delegate
        self.delegate_type = delegate_type
        self.valid_to = valid_to
        self.previous_change = previous_change

    def __str__(self):
        return "DidDelegateChanged(identity={}, delegate={}, delegate_type={}, valid_to={}, previous_change={})".format(self.identity, self.delegate, self.delegate_type, self.valid_to, self.previous_change)

    def __eq__(self, other):
        if self.identity != other.identity:
            return False
        if self.delegate != other.delegate:
            return False
        if self.delegate_type != other.delegate_type:
            return False
        if self.valid_to != other.valid_to:
            return False
        if self.previous_change != other.previous_change:
            return False
        return True

class _UniffiConverterTypeDidDelegateChanged(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return DidDelegateChanged(
            identity=_UniffiConverterString.read(buf),
            delegate=_UniffiConverterString.read(buf),
            delegate_type=_UniffiConverterBytes.read(buf),
            valid_to=_UniffiConverterUInt64.read(buf),
            previous_change=_UniffiConverterUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.identity)
        _UniffiConverterString.check_lower(value.delegate)
        _UniffiConverterBytes.check_lower(value.delegate_type)
        _UniffiConverterUInt64.check_lower(value.valid_to)
        _UniffiConverterUInt64.check_lower(value.previous_change)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.identity, buf)
        _UniffiConverterString.write(value.delegate, buf)
        _UniffiConverterBytes.write(value.delegate_type, buf)
        _UniffiConverterUInt64.write(value.valid_to, buf)
        _UniffiConverterUInt64.write(value.previous_change, buf)


class DidOwnerChanged:
    identity: "str"
    owner: "str"
    previous_change: "int"
    @typing.no_type_check
    def __init__(self, identity: "str", owner: "str", previous_change: "int"):
        self.identity = identity
        self.owner = owner
        self.previous_change = previous_change

    def __str__(self):
        return "DidOwnerChanged(identity={}, owner={}, previous_change={})".format(self.identity, self.owner, self.previous_change)

    def __eq__(self, other):
        if self.identity != other.identity:
            return False
        if self.owner != other.owner:
            return False
        if self.previous_change != other.previous_change:
            return False
        return True

class _UniffiConverterTypeDidOwnerChanged(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return DidOwnerChanged(
            identity=_UniffiConverterString.read(buf),
            owner=_UniffiConverterString.read(buf),
            previous_change=_UniffiConverterUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.identity)
        _UniffiConverterString.check_lower(value.owner)
        _UniffiConverterUInt64.check_lower(value.previous_change)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.identity, buf)
        _UniffiConverterString.write(value.owner, buf)
        _UniffiConverterUInt64.write(value.previous_change, buf)


class DidResolutionOptions:
    accept: "typing.Optional[str]"
    block_tag: "typing.Optional[int]"
    @typing.no_type_check
    def __init__(self, accept: "typing.Optional[str]", block_tag: "typing.Optional[int]"):
        self.accept = accept
        self.block_tag = block_tag

    def __str__(self):
        return "DidResolutionOptions(accept={}, block_tag={})".format(self.accept, self.block_tag)

    def __eq__(self, other):
        if self.accept != other.accept:
            return False
        if self.block_tag != other.block_tag:
            return False
        return True

class _UniffiConverterTypeDidResolutionOptions(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return DidResolutionOptions(
            accept=_UniffiConverterOptionalString.read(buf),
            block_tag=_UniffiConverterOptionalUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterOptionalString.check_lower(value.accept)
        _UniffiConverterOptionalUInt64.check_lower(value.block_tag)

    @staticmethod
    def write(value, buf):
        _UniffiConverterOptionalString.write(value.accept, buf)
        _UniffiConverterOptionalUInt64.write(value.block_tag, buf)


class EventLog:
    topics: "typing.List[bytes]"
    data: "bytes"
    block: "int"
    @typing.no_type_check
    def __init__(self, topics: "typing.List[bytes]", data: "bytes", block: "int"):
        self.topics = topics
        self.data = data
        self.block = block

    def __str__(self):
        return "EventLog(topics={}, data={}, block={})".format(self.topics, self.data, self.block)

    def __eq__(self, other):
        if self.topics != other.topics:
            return False
        if self.data != other.data:
            return False
        if self.block != other.block:
            return False
        return True

class _UniffiConverterTypeEventLog(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return EventLog(
            topics=_UniffiConverterSequenceBytes.read(buf),
            data=_UniffiConverterBytes.read(buf),
            block=_UniffiConverterUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterSequenceBytes.check_lower(value.topics)
        _UniffiConverterBytes.check_lower(value.data)
        _UniffiConverterUInt64.check_lower(value.block)

    @staticmethod
    def write(value, buf):
        _UniffiConverterSequenceBytes.write(value.topics, buf)
        _UniffiConverterBytes.write(value.data, buf)
        _UniffiConverterUInt64.write(value.block, buf)


class EventQuery:
    address: "str"
    from_block: "typing.Optional[int]"
    to_block: "typing.Optional[int]"
    event_signature: "typing.Optional[str]"
    event_filter: "typing.Optional[str]"
    @typing.no_type_check
    def __init__(self, address: "str", from_block: "typing.Optional[int]", to_block: "typing.Optional[int]", event_signature: "typing.Optional[str]", event_filter: "typing.Optional[str]"):
        self.address = address
        self.from_block = from_block
        self.to_block = to_block
        self.event_signature = event_signature
        self.event_filter = event_filter

    def __str__(self):
        return "EventQuery(address={}, from_block={}, to_block={}, event_signature={}, event_filter={})".format(self.address, self.from_block, self.to_block, self.event_signature, self.event_filter)

    def __eq__(self, other):
        if self.address != other.address:
            return False
        if self.from_block != other.from_block:
            return False
        if self.to_block != other.to_block:
            return False
        if self.event_signature != other.event_signature:
            return False
        if self.event_filter != other.event_filter:
            return False
        return True

class _UniffiConverterTypeEventQuery(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return EventQuery(
            address=_UniffiConverterString.read(buf),
            from_block=_UniffiConverterOptionalUInt64.read(buf),
            to_block=_UniffiConverterOptionalUInt64.read(buf),
            event_signature=_UniffiConverterOptionalString.read(buf),
            event_filter=_UniffiConverterOptionalString.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.address)
        _UniffiConverterOptionalUInt64.check_lower(value.from_block)
        _UniffiConverterOptionalUInt64.check_lower(value.to_block)
        _UniffiConverterOptionalString.check_lower(value.event_signature)
        _UniffiConverterOptionalString.check_lower(value.event_filter)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.address, buf)
        _UniffiConverterOptionalUInt64.write(value.from_block, buf)
        _UniffiConverterOptionalUInt64.write(value.to_block, buf)
        _UniffiConverterOptionalString.write(value.event_signature, buf)
        _UniffiConverterOptionalString.write(value.event_filter, buf)


class PingStatus:
    status: "Status"
    @typing.no_type_check
    def __init__(self, status: "Status"):
        self.status = status

    def __str__(self):
        return "PingStatus(status={})".format(self.status)

    def __eq__(self, other):
        if self.status != other.status:
            return False
        return True

class _UniffiConverterTypePingStatus(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return PingStatus(
            status=_UniffiConverterTypeStatus.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterTypeStatus.check_lower(value.status)

    @staticmethod
    def write(value, buf):
        _UniffiConverterTypeStatus.write(value.status, buf)


class QuorumConfig:
    nodes: "typing.List[str]"
    request_retries: "typing.Optional[int]"
    request_timeout: "typing.Optional[int]"
    retry_interval: "typing.Optional[int]"
    @typing.no_type_check
    def __init__(self, nodes: "typing.List[str]", request_retries: "typing.Optional[int]", request_timeout: "typing.Optional[int]", retry_interval: "typing.Optional[int]"):
        self.nodes = nodes
        self.request_retries = request_retries
        self.request_timeout = request_timeout
        self.retry_interval = retry_interval

    def __str__(self):
        return "QuorumConfig(nodes={}, request_retries={}, request_timeout={}, retry_interval={})".format(self.nodes, self.request_retries, self.request_timeout, self.retry_interval)

    def __eq__(self, other):
        if self.nodes != other.nodes:
            return False
        if self.request_retries != other.request_retries:
            return False
        if self.request_timeout != other.request_timeout:
            return False
        if self.retry_interval != other.retry_interval:
            return False
        return True

class _UniffiConverterTypeQuorumConfig(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return QuorumConfig(
            nodes=_UniffiConverterSequenceString.read(buf),
            request_retries=_UniffiConverterOptionalUInt8.read(buf),
            request_timeout=_UniffiConverterOptionalUInt64.read(buf),
            retry_interval=_UniffiConverterOptionalUInt64.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterSequenceString.check_lower(value.nodes)
        _UniffiConverterOptionalUInt8.check_lower(value.request_retries)
        _UniffiConverterOptionalUInt64.check_lower(value.request_timeout)
        _UniffiConverterOptionalUInt64.check_lower(value.retry_interval)

    @staticmethod
    def write(value, buf):
        _UniffiConverterSequenceString.write(value.nodes, buf)
        _UniffiConverterOptionalUInt8.write(value.request_retries, buf)
        _UniffiConverterOptionalUInt64.write(value.request_timeout, buf)
        _UniffiConverterOptionalUInt64.write(value.retry_interval, buf)


class Schema:
    issuer_id: "str"
    name: "str"
    version: "str"
    attr_names: "typing.List[str]"
    @typing.no_type_check
    def __init__(self, issuer_id: "str", name: "str", version: "str", attr_names: "typing.List[str]"):
        self.issuer_id = issuer_id
        self.name = name
        self.version = version
        self.attr_names = attr_names

    def __str__(self):
        return "Schema(issuer_id={}, name={}, version={}, attr_names={})".format(self.issuer_id, self.name, self.version, self.attr_names)

    def __eq__(self, other):
        if self.issuer_id != other.issuer_id:
            return False
        if self.name != other.name:
            return False
        if self.version != other.version:
            return False
        if self.attr_names != other.attr_names:
            return False
        return True

class _UniffiConverterTypeSchema(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return Schema(
            issuer_id=_UniffiConverterString.read(buf),
            name=_UniffiConverterString.read(buf),
            version=_UniffiConverterString.read(buf),
            attr_names=_UniffiConverterSequenceString.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.issuer_id)
        _UniffiConverterString.check_lower(value.name)
        _UniffiConverterString.check_lower(value.version)
        _UniffiConverterSequenceString.check_lower(value.attr_names)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.issuer_id, buf)
        _UniffiConverterString.write(value.name, buf)
        _UniffiConverterString.write(value.version, buf)
        _UniffiConverterSequenceString.write(value.attr_names, buf)


class SignatureData:
    recovery_id: "int"
    signature: "bytes"
    @typing.no_type_check
    def __init__(self, recovery_id: "int", signature: "bytes"):
        self.recovery_id = recovery_id
        self.signature = signature

    def __str__(self):
        return "SignatureData(recovery_id={}, signature={})".format(self.recovery_id, self.signature)

    def __eq__(self, other):
        if self.recovery_id != other.recovery_id:
            return False
        if self.signature != other.signature:
            return False
        return True

class _UniffiConverterTypeSignatureData(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return SignatureData(
            recovery_id=_UniffiConverterUInt64.read(buf),
            signature=_UniffiConverterBytes.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterUInt64.check_lower(value.recovery_id)
        _UniffiConverterBytes.check_lower(value.signature)

    @staticmethod
    def write(value, buf):
        _UniffiConverterUInt64.write(value.recovery_id, buf)
        _UniffiConverterBytes.write(value.signature, buf)


class Transaction:
    type: "TransactionType"
    _from: "typing.Optional[str]"
    to: "str"
    nonce: "typing.Optional[int]"
    chain_id: "int"
    data: "bytes"
    signature: "typing.Optional[SignatureData]"
    hash: "typing.Optional[bytes]"
    @typing.no_type_check
    def __init__(self, type: "TransactionType", _from: "typing.Optional[str]", to: "str", nonce: "typing.Optional[int]", chain_id: "int", data: "bytes", signature: "typing.Optional[SignatureData]", hash: "typing.Optional[bytes]"):
        self.type = type
        self._from = _from
        self.to = to
        self.nonce = nonce
        self.chain_id = chain_id
        self.data = data
        self.signature = signature
        self.hash = hash

    def __str__(self):
        return "Transaction(type={}, _from={}, to={}, nonce={}, chain_id={}, data={}, signature={}, hash={})".format(self.type, self._from, self.to, self.nonce, self.chain_id, self.data, self.signature, self.hash)

    def __eq__(self, other):
        if self.type != other.type:
            return False
        if self._from != other._from:
            return False
        if self.to != other.to:
            return False
        if self.nonce != other.nonce:
            return False
        if self.chain_id != other.chain_id:
            return False
        if self.data != other.data:
            return False
        if self.signature != other.signature:
            return False
        if self.hash != other.hash:
            return False
        return True

class _UniffiConverterTypeTransaction(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return Transaction(
            type=_UniffiConverterTypeTransactionType.read(buf),
            _from=_UniffiConverterOptionalString.read(buf),
            to=_UniffiConverterString.read(buf),
            nonce=_UniffiConverterOptionalUInt64.read(buf),
            chain_id=_UniffiConverterUInt64.read(buf),
            data=_UniffiConverterBytes.read(buf),
            signature=_UniffiConverterOptionalTypeSignatureData.read(buf),
            hash=_UniffiConverterOptionalBytes.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterTypeTransactionType.check_lower(value.type)
        _UniffiConverterOptionalString.check_lower(value._from)
        _UniffiConverterString.check_lower(value.to)
        _UniffiConverterOptionalUInt64.check_lower(value.nonce)
        _UniffiConverterUInt64.check_lower(value.chain_id)
        _UniffiConverterBytes.check_lower(value.data)
        _UniffiConverterOptionalTypeSignatureData.check_lower(value.signature)
        _UniffiConverterOptionalBytes.check_lower(value.hash)

    @staticmethod
    def write(value, buf):
        _UniffiConverterTypeTransactionType.write(value.type, buf)
        _UniffiConverterOptionalString.write(value._from, buf)
        _UniffiConverterString.write(value.to, buf)
        _UniffiConverterOptionalUInt64.write(value.nonce, buf)
        _UniffiConverterUInt64.write(value.chain_id, buf)
        _UniffiConverterBytes.write(value.data, buf)
        _UniffiConverterOptionalTypeSignatureData.write(value.signature, buf)
        _UniffiConverterOptionalBytes.write(value.hash, buf)


class TransactionEndorsingData:
    to: "str"
    _from: "str"
    nonce: "typing.Optional[int]"
    contract: "str"
    method: "str"
    endorsing_method: "str"
    params: "typing.List[JsonValue]"
    signature: "typing.Optional[SignatureData]"
    @typing.no_type_check
    def __init__(self, to: "str", _from: "str", nonce: "typing.Optional[int]", contract: "str", method: "str", endorsing_method: "str", params: "typing.List[JsonValue]", signature: "typing.Optional[SignatureData]"):
        self.to = to
        self._from = _from
        self.nonce = nonce
        self.contract = contract
        self.method = method
        self.endorsing_method = endorsing_method
        self.params = params
        self.signature = signature

    def __str__(self):
        return "TransactionEndorsingData(to={}, _from={}, nonce={}, contract={}, method={}, endorsing_method={}, params={}, signature={})".format(self.to, self._from, self.nonce, self.contract, self.method, self.endorsing_method, self.params, self.signature)

    def __eq__(self, other):
        if self.to != other.to:
            return False
        if self._from != other._from:
            return False
        if self.nonce != other.nonce:
            return False
        if self.contract != other.contract:
            return False
        if self.method != other.method:
            return False
        if self.endorsing_method != other.endorsing_method:
            return False
        if self.params != other.params:
            return False
        if self.signature != other.signature:
            return False
        return True

class _UniffiConverterTypeTransactionEndorsingData(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        return TransactionEndorsingData(
            to=_UniffiConverterString.read(buf),
            _from=_UniffiConverterString.read(buf),
            nonce=_UniffiConverterOptionalUInt64.read(buf),
            contract=_UniffiConverterString.read(buf),
            method=_UniffiConverterString.read(buf),
            endorsing_method=_UniffiConverterString.read(buf),
            params=_UniffiConverterSequenceTypeJsonValue.read(buf),
            signature=_UniffiConverterOptionalTypeSignatureData.read(buf),
        )

    @staticmethod
    def check_lower(value):
        _UniffiConverterString.check_lower(value.to)
        _UniffiConverterString.check_lower(value._from)
        _UniffiConverterOptionalUInt64.check_lower(value.nonce)
        _UniffiConverterString.check_lower(value.contract)
        _UniffiConverterString.check_lower(value.method)
        _UniffiConverterString.check_lower(value.endorsing_method)
        _UniffiConverterSequenceTypeJsonValue.check_lower(value.params)
        _UniffiConverterOptionalTypeSignatureData.check_lower(value.signature)

    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value.to, buf)
        _UniffiConverterString.write(value._from, buf)
        _UniffiConverterOptionalUInt64.write(value.nonce, buf)
        _UniffiConverterString.write(value.contract, buf)
        _UniffiConverterString.write(value.method, buf)
        _UniffiConverterString.write(value.endorsing_method, buf)
        _UniffiConverterSequenceTypeJsonValue.write(value.params, buf)
        _UniffiConverterOptionalTypeSignatureData.write(value.signature, buf)





class DidEvents:
    def __init__(self):
        raise RuntimeError("DidEvents cannot be instantiated directly")

    # Each enum variant is a nested class of the enum itself.
    class ATTRIBUTE_CHANGED_EVENT:
        event: "DidAttributeChanged"

        @typing.no_type_check
        def __init__(self,event: "DidAttributeChanged"):
            
            self.event = event
            

        def __str__(self):
            return "DidEvents.ATTRIBUTE_CHANGED_EVENT(event={})".format(self.event)

        def __eq__(self, other):
            if not other.is_attribute_changed_event():
                return False
            if self.event != other.event:
                return False
            return True
    class DELEGATE_CHANGED:
        event: "DidDelegateChanged"

        @typing.no_type_check
        def __init__(self,event: "DidDelegateChanged"):
            
            self.event = event
            

        def __str__(self):
            return "DidEvents.DELEGATE_CHANGED(event={})".format(self.event)

        def __eq__(self, other):
            if not other.is_delegate_changed():
                return False
            if self.event != other.event:
                return False
            return True
    class OWNER_CHANGED:
        event: "DidOwnerChanged"

        @typing.no_type_check
        def __init__(self,event: "DidOwnerChanged"):
            
            self.event = event
            

        def __str__(self):
            return "DidEvents.OWNER_CHANGED(event={})".format(self.event)

        def __eq__(self, other):
            if not other.is_owner_changed():
                return False
            if self.event != other.event:
                return False
            return True
    

    # For each variant, we have an `is_NAME` method for easily checking
    # whether an instance is that variant.
    def is_attribute_changed_event(self) -> bool:
        return isinstance(self, DidEvents.ATTRIBUTE_CHANGED_EVENT)
    def is_delegate_changed(self) -> bool:
        return isinstance(self, DidEvents.DELEGATE_CHANGED)
    def is_owner_changed(self) -> bool:
        return isinstance(self, DidEvents.OWNER_CHANGED)
    

# Now, a little trick - we make each nested variant class be a subclass of the main
# enum class, so that method calls and instance checks etc will work intuitively.
# We might be able to do this a little more neatly with a metaclass, but this'll do.
DidEvents.ATTRIBUTE_CHANGED_EVENT = type("DidEvents.ATTRIBUTE_CHANGED_EVENT", (DidEvents.ATTRIBUTE_CHANGED_EVENT, DidEvents,), {})  # type: ignore
DidEvents.DELEGATE_CHANGED = type("DidEvents.DELEGATE_CHANGED", (DidEvents.DELEGATE_CHANGED, DidEvents,), {})  # type: ignore
DidEvents.OWNER_CHANGED = type("DidEvents.OWNER_CHANGED", (DidEvents.OWNER_CHANGED, DidEvents,), {})  # type: ignore




class _UniffiConverterTypeDidEvents(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        variant = buf.read_i32()
        if variant == 1:
            return DidEvents.ATTRIBUTE_CHANGED_EVENT(
                _UniffiConverterTypeDidAttributeChanged.read(buf),
            )
        if variant == 2:
            return DidEvents.DELEGATE_CHANGED(
                _UniffiConverterTypeDidDelegateChanged.read(buf),
            )
        if variant == 3:
            return DidEvents.OWNER_CHANGED(
                _UniffiConverterTypeDidOwnerChanged.read(buf),
            )
        raise InternalError("Raw enum value doesn't match any cases")

    @staticmethod
    def check_lower(value):
        if value.is_attribute_changed_event():
            _UniffiConverterTypeDidAttributeChanged.check_lower(value.event)
            return
        if value.is_delegate_changed():
            _UniffiConverterTypeDidDelegateChanged.check_lower(value.event)
            return
        if value.is_owner_changed():
            _UniffiConverterTypeDidOwnerChanged.check_lower(value.event)
            return

    @staticmethod
    def write(value, buf):
        if value.is_attribute_changed_event():
            buf.write_i32(1)
            _UniffiConverterTypeDidAttributeChanged.write(value.event, buf)
        if value.is_delegate_changed():
            buf.write_i32(2)
            _UniffiConverterTypeDidDelegateChanged.write(value.event, buf)
        if value.is_owner_changed():
            buf.write_i32(3)
            _UniffiConverterTypeDidOwnerChanged.write(value.event, buf)







class Status:
    def __init__(self):
        raise RuntimeError("Status cannot be instantiated directly")

    # Each enum variant is a nested class of the enum itself.
    class OK:
        block_number: "int"
        block_timestamp: "int"

        @typing.no_type_check
        def __init__(self,block_number: "int", block_timestamp: "int"):
            
            self.block_number = block_number
            self.block_timestamp = block_timestamp
            

        def __str__(self):
            return "Status.OK(block_number={}, block_timestamp={})".format(self.block_number, self.block_timestamp)

        def __eq__(self, other):
            if not other.is_ok():
                return False
            if self.block_number != other.block_number:
                return False
            if self.block_timestamp != other.block_timestamp:
                return False
            return True
    class ERR:
        msg: "str"

        @typing.no_type_check
        def __init__(self,msg: "str"):
            
            self.msg = msg
            

        def __str__(self):
            return "Status.ERR(msg={})".format(self.msg)

        def __eq__(self, other):
            if not other.is_err():
                return False
            if self.msg != other.msg:
                return False
            return True
    

    # For each variant, we have an `is_NAME` method for easily checking
    # whether an instance is that variant.
    def is_ok(self) -> bool:
        return isinstance(self, Status.OK)
    def is_err(self) -> bool:
        return isinstance(self, Status.ERR)
    

# Now, a little trick - we make each nested variant class be a subclass of the main
# enum class, so that method calls and instance checks etc will work intuitively.
# We might be able to do this a little more neatly with a metaclass, but this'll do.
Status.OK = type("Status.OK", (Status.OK, Status,), {})  # type: ignore
Status.ERR = type("Status.ERR", (Status.ERR, Status,), {})  # type: ignore




class _UniffiConverterTypeStatus(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        variant = buf.read_i32()
        if variant == 1:
            return Status.OK(
                _UniffiConverterUInt64.read(buf),
                _UniffiConverterUInt64.read(buf),
            )
        if variant == 2:
            return Status.ERR(
                _UniffiConverterString.read(buf),
            )
        raise InternalError("Raw enum value doesn't match any cases")

    @staticmethod
    def check_lower(value):
        if value.is_ok():
            _UniffiConverterUInt64.check_lower(value.block_number)
            _UniffiConverterUInt64.check_lower(value.block_timestamp)
            return
        if value.is_err():
            _UniffiConverterString.check_lower(value.msg)
            return

    @staticmethod
    def write(value, buf):
        if value.is_ok():
            buf.write_i32(1)
            _UniffiConverterUInt64.write(value.block_number, buf)
            _UniffiConverterUInt64.write(value.block_timestamp, buf)
        if value.is_err():
            buf.write_i32(2)
            _UniffiConverterString.write(value.msg, buf)







class TransactionType(enum.Enum):
    READ = 0
    
    WRITE = 1
    


class _UniffiConverterTypeTransactionType(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        variant = buf.read_i32()
        if variant == 1:
            return TransactionType.READ
        if variant == 2:
            return TransactionType.WRITE
        raise InternalError("Raw enum value doesn't match any cases")

    @staticmethod
    def check_lower(value):
        if value == TransactionType.READ:
            return
        if value == TransactionType.WRITE:
            return

    @staticmethod
    def write(value, buf):
        if value == TransactionType.READ:
            buf.write_i32(1)
        if value == TransactionType.WRITE:
            buf.write_i32(2)




# VdrError
# We want to define each variant as a nested class that's also a subclass,
# which is tricky in Python.  To accomplish this we're going to create each
# class separately, then manually add the child classes to the base class's
# __dict__.  All of this happens in dummy class to avoid polluting the module
# namespace.
class VdrError(Exception):
    pass

_UniffiTempVdrError = VdrError

class VdrError:  # type: ignore
    class ClientNodeUnreachable(_UniffiTempVdrError):

        def __init__(self):
            pass
        def __repr__(self):
            return "VdrError.ClientNodeUnreachable({})".format(str(self))
    _UniffiTempVdrError.ClientNodeUnreachable = ClientNodeUnreachable # type: ignore
    class ClientInvalidTransaction(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientInvalidTransaction({})".format(str(self))
    _UniffiTempVdrError.ClientInvalidTransaction = ClientInvalidTransaction # type: ignore
    class ClientInvalidEndorsementData(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientInvalidEndorsementData({})".format(str(self))
    _UniffiTempVdrError.ClientInvalidEndorsementData = ClientInvalidEndorsementData # type: ignore
    class ClientInvalidResponse(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientInvalidResponse({})".format(str(self))
    _UniffiTempVdrError.ClientInvalidResponse = ClientInvalidResponse # type: ignore
    class ClientTransactionReverted(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientTransactionReverted({})".format(str(self))
    _UniffiTempVdrError.ClientTransactionReverted = ClientTransactionReverted # type: ignore
    class ClientUnexpectedError(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientUnexpectedError({})".format(str(self))
    _UniffiTempVdrError.ClientUnexpectedError = ClientUnexpectedError # type: ignore
    class ClientInvalidState(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ClientInvalidState({})".format(str(self))
    _UniffiTempVdrError.ClientInvalidState = ClientInvalidState # type: ignore
    class ContractInvalidName(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ContractInvalidName({})".format(str(self))
    _UniffiTempVdrError.ContractInvalidName = ContractInvalidName # type: ignore
    class ContractInvalidSpec(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ContractInvalidSpec({})".format(str(self))
    _UniffiTempVdrError.ContractInvalidSpec = ContractInvalidSpec # type: ignore
    class ContractInvalidInputData(_UniffiTempVdrError):

        def __init__(self):
            pass
        def __repr__(self):
            return "VdrError.ContractInvalidInputData({})".format(str(self))
    _UniffiTempVdrError.ContractInvalidInputData = ContractInvalidInputData # type: ignore
    class ContractInvalidResponseData(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.ContractInvalidResponseData({})".format(str(self))
    _UniffiTempVdrError.ContractInvalidResponseData = ContractInvalidResponseData # type: ignore
    class SignerInvalidPrivateKey(_UniffiTempVdrError):

        def __init__(self):
            pass
        def __repr__(self):
            return "VdrError.SignerInvalidPrivateKey({})".format(str(self))
    _UniffiTempVdrError.SignerInvalidPrivateKey = SignerInvalidPrivateKey # type: ignore
    class SignerInvalidMessage(_UniffiTempVdrError):

        def __init__(self):
            pass
        def __repr__(self):
            return "VdrError.SignerInvalidMessage({})".format(str(self))
    _UniffiTempVdrError.SignerInvalidMessage = SignerInvalidMessage # type: ignore
    class SignerMissingKey(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.SignerMissingKey({})".format(str(self))
    _UniffiTempVdrError.SignerMissingKey = SignerMissingKey # type: ignore
    class SignerUnexpectedError(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.SignerUnexpectedError({})".format(str(self))
    _UniffiTempVdrError.SignerUnexpectedError = SignerUnexpectedError # type: ignore
    class CommonInvalidData(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.CommonInvalidData({})".format(str(self))
    _UniffiTempVdrError.CommonInvalidData = CommonInvalidData # type: ignore
    class QuorumNotReached(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.QuorumNotReached({})".format(str(self))
    _UniffiTempVdrError.QuorumNotReached = QuorumNotReached # type: ignore
    class GetTransactionError(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.GetTransactionError({})".format(str(self))
    _UniffiTempVdrError.GetTransactionError = GetTransactionError # type: ignore
    class InvalidSchema(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.InvalidSchema({})".format(str(self))
    _UniffiTempVdrError.InvalidSchema = InvalidSchema # type: ignore
    class InvalidCredentialDefinition(_UniffiTempVdrError):

        def __init__(self, msg):
            super().__init__(", ".join([
                "msg={!r}".format(msg),
            ]))
            self.msg = msg
        def __repr__(self):
            return "VdrError.InvalidCredentialDefinition({})".format(str(self))
    _UniffiTempVdrError.InvalidCredentialDefinition = InvalidCredentialDefinition # type: ignore

VdrError = _UniffiTempVdrError # type: ignore
del _UniffiTempVdrError


class _UniffiConverterTypeVdrError(_UniffiConverterRustBuffer):
    @staticmethod
    def read(buf):
        variant = buf.read_i32()
        if variant == 1:
            return VdrError.ClientNodeUnreachable(
            )
        if variant == 2:
            return VdrError.ClientInvalidTransaction(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 3:
            return VdrError.ClientInvalidEndorsementData(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 4:
            return VdrError.ClientInvalidResponse(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 5:
            return VdrError.ClientTransactionReverted(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 6:
            return VdrError.ClientUnexpectedError(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 7:
            return VdrError.ClientInvalidState(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 8:
            return VdrError.ContractInvalidName(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 9:
            return VdrError.ContractInvalidSpec(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 10:
            return VdrError.ContractInvalidInputData(
            )
        if variant == 11:
            return VdrError.ContractInvalidResponseData(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 12:
            return VdrError.SignerInvalidPrivateKey(
            )
        if variant == 13:
            return VdrError.SignerInvalidMessage(
            )
        if variant == 14:
            return VdrError.SignerMissingKey(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 15:
            return VdrError.SignerUnexpectedError(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 16:
            return VdrError.CommonInvalidData(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 17:
            return VdrError.QuorumNotReached(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 18:
            return VdrError.GetTransactionError(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 19:
            return VdrError.InvalidSchema(
                msg=_UniffiConverterString.read(buf),
            )
        if variant == 20:
            return VdrError.InvalidCredentialDefinition(
                msg=_UniffiConverterString.read(buf),
            )
        raise InternalError("Raw enum value doesn't match any cases")

    @staticmethod
    def check_lower(value):
        if isinstance(value, VdrError.ClientNodeUnreachable):
            return
        if isinstance(value, VdrError.ClientInvalidTransaction):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ClientInvalidEndorsementData):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ClientInvalidResponse):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ClientTransactionReverted):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ClientUnexpectedError):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ClientInvalidState):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ContractInvalidName):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ContractInvalidSpec):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.ContractInvalidInputData):
            return
        if isinstance(value, VdrError.ContractInvalidResponseData):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.SignerInvalidPrivateKey):
            return
        if isinstance(value, VdrError.SignerInvalidMessage):
            return
        if isinstance(value, VdrError.SignerMissingKey):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.SignerUnexpectedError):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.CommonInvalidData):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.QuorumNotReached):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.GetTransactionError):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.InvalidSchema):
            _UniffiConverterString.check_lower(value.msg)
            return
        if isinstance(value, VdrError.InvalidCredentialDefinition):
            _UniffiConverterString.check_lower(value.msg)
            return

    @staticmethod
    def write(value, buf):
        if isinstance(value, VdrError.ClientNodeUnreachable):
            buf.write_i32(1)
        if isinstance(value, VdrError.ClientInvalidTransaction):
            buf.write_i32(2)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ClientInvalidEndorsementData):
            buf.write_i32(3)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ClientInvalidResponse):
            buf.write_i32(4)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ClientTransactionReverted):
            buf.write_i32(5)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ClientUnexpectedError):
            buf.write_i32(6)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ClientInvalidState):
            buf.write_i32(7)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ContractInvalidName):
            buf.write_i32(8)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ContractInvalidSpec):
            buf.write_i32(9)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.ContractInvalidInputData):
            buf.write_i32(10)
        if isinstance(value, VdrError.ContractInvalidResponseData):
            buf.write_i32(11)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.SignerInvalidPrivateKey):
            buf.write_i32(12)
        if isinstance(value, VdrError.SignerInvalidMessage):
            buf.write_i32(13)
        if isinstance(value, VdrError.SignerMissingKey):
            buf.write_i32(14)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.SignerUnexpectedError):
            buf.write_i32(15)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.CommonInvalidData):
            buf.write_i32(16)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.QuorumNotReached):
            buf.write_i32(17)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.GetTransactionError):
            buf.write_i32(18)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.InvalidSchema):
            buf.write_i32(19)
            _UniffiConverterString.write(value.msg, buf)
        if isinstance(value, VdrError.InvalidCredentialDefinition):
            buf.write_i32(20)
            _UniffiConverterString.write(value.msg, buf)



class _UniffiConverterOptionalUInt8(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterUInt8.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterUInt8.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterUInt8.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalUInt64(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterUInt64.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterUInt64.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterUInt64.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalString(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterString.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterString.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterString.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalBytes(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterBytes.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterBytes.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterBytes.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalTypeContractSpec(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterTypeContractSpec.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterTypeContractSpec.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterTypeContractSpec.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalTypeDidResolutionOptions(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterTypeDidResolutionOptions.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterTypeDidResolutionOptions.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterTypeDidResolutionOptions.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalTypeQuorumConfig(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterTypeQuorumConfig.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterTypeQuorumConfig.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterTypeQuorumConfig.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterOptionalTypeSignatureData(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        if value is not None:
            _UniffiConverterTypeSignatureData.check_lower(value)

    @classmethod
    def write(cls, value, buf):
        if value is None:
            buf.write_u8(0)
            return

        buf.write_u8(1)
        _UniffiConverterTypeSignatureData.write(value, buf)

    @classmethod
    def read(cls, buf):
        flag = buf.read_u8()
        if flag == 0:
            return None
        elif flag == 1:
            return _UniffiConverterTypeSignatureData.read(buf)
        else:
            raise InternalError("Unexpected flag byte for optional type")



class _UniffiConverterSequenceString(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        for item in value:
            _UniffiConverterString.check_lower(item)

    @classmethod
    def write(cls, value, buf):
        items = len(value)
        buf.write_i32(items)
        for item in value:
            _UniffiConverterString.write(item, buf)

    @classmethod
    def read(cls, buf):
        count = buf.read_i32()
        if count < 0:
            raise InternalError("Unexpected negative sequence length")

        return [
            _UniffiConverterString.read(buf) for i in range(count)
        ]



class _UniffiConverterSequenceBytes(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        for item in value:
            _UniffiConverterBytes.check_lower(item)

    @classmethod
    def write(cls, value, buf):
        items = len(value)
        buf.write_i32(items)
        for item in value:
            _UniffiConverterBytes.write(item, buf)

    @classmethod
    def read(cls, buf):
        count = buf.read_i32()
        if count < 0:
            raise InternalError("Unexpected negative sequence length")

        return [
            _UniffiConverterBytes.read(buf) for i in range(count)
        ]



class _UniffiConverterSequenceTypeContractConfig(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        for item in value:
            _UniffiConverterTypeContractConfig.check_lower(item)

    @classmethod
    def write(cls, value, buf):
        items = len(value)
        buf.write_i32(items)
        for item in value:
            _UniffiConverterTypeContractConfig.write(item, buf)

    @classmethod
    def read(cls, buf):
        count = buf.read_i32()
        if count < 0:
            raise InternalError("Unexpected negative sequence length")

        return [
            _UniffiConverterTypeContractConfig.read(buf) for i in range(count)
        ]



class _UniffiConverterSequenceTypeEventLog(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        for item in value:
            _UniffiConverterTypeEventLog.check_lower(item)

    @classmethod
    def write(cls, value, buf):
        items = len(value)
        buf.write_i32(items)
        for item in value:
            _UniffiConverterTypeEventLog.write(item, buf)

    @classmethod
    def read(cls, buf):
        count = buf.read_i32()
        if count < 0:
            raise InternalError("Unexpected negative sequence length")

        return [
            _UniffiConverterTypeEventLog.read(buf) for i in range(count)
        ]



class _UniffiConverterSequenceTypeJsonValue(_UniffiConverterRustBuffer):
    @classmethod
    def check_lower(cls, value):
        for item in value:
            _UniffiConverterTypeJsonValue.check_lower(item)

    @classmethod
    def write(cls, value, buf):
        items = len(value)
        buf.write_i32(items)
        for item in value:
            _UniffiConverterTypeJsonValue.write(item, buf)

    @classmethod
    def read(cls, buf):
        count = buf.read_i32()
        if count < 0:
            raise InternalError("Unexpected negative sequence length")

        return [
            _UniffiConverterTypeJsonValue.read(buf) for i in range(count)
        ]


# Type alias
JsonValue = str

class _UniffiConverterTypeJsonValue:
    @staticmethod
    def write(value, buf):
        _UniffiConverterString.write(value, buf)

    @staticmethod
    def read(buf):
        return _UniffiConverterString.read(buf)

    @staticmethod
    def lift(value):
        return _UniffiConverterString.lift(value)

    @staticmethod
    def check_lower(value):
        return _UniffiConverterString.check_lower(value)

    @staticmethod
    def lower(value):
        return _UniffiConverterString.lower(value)

def build_add_validator_transaction(client: "LedgerClient",_from: "str",validator_address: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(validator_address)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_add_validator_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(validator_address)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_assign_role_transaction(client: "LedgerClient",_from: "str",role: "int",account: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterUInt8.check_lower(role)
    
    _UniffiConverterString.check_lower(account)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_assign_role_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterUInt8.lower(role),
        _UniffiConverterString.lower(account)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_credential_definition_endorsing_data(client: "LedgerClient",credential_definition: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(credential_definition)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(credential_definition)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_credential_definition_transaction(client: "LedgerClient",_from: "str",credential_definition: "CredentialDefinition"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterTypeCredentialDefinition.check_lower(credential_definition)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_credential_definition_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterTypeCredentialDefinition.lower(credential_definition)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_did_endorsing_data(client: "LedgerClient",did: "str",did_doc: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(did_doc)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(did_doc)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_did_mapping_endorsing_data(client: "LedgerClient",did: "str",legacy_identifier: "str",legacy_verkey: "str",ed25519_signature: "bytes"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    _UniffiConverterString.check_lower(legacy_verkey)
    
    _UniffiConverterBytes.check_lower(ed25519_signature)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(legacy_identifier),
        _UniffiConverterString.lower(legacy_verkey),
        _UniffiConverterBytes.lower(ed25519_signature)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_did_mapping_transaction(client: "LedgerClient",_from: "str",did: "str",legacy_identifier: "str",legacy_verkey: "str",ed25519_signature: "bytes"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    _UniffiConverterString.check_lower(legacy_verkey)
    
    _UniffiConverterBytes.check_lower(ed25519_signature)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_mapping_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(legacy_identifier),
        _UniffiConverterString.lower(legacy_verkey),
        _UniffiConverterBytes.lower(ed25519_signature)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_did_transaction(client: "LedgerClient",_from: "str",did: "str",did_doc: "JsonValue"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterTypeJsonValue.check_lower(did_doc)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_did_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterTypeJsonValue.lower(did_doc)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_resource_mapping_endorsing_data(client: "LedgerClient",did: "str",legacy_issuer_identifier: "str",legacy_identifier: "str",new_identifier: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(legacy_issuer_identifier)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    _UniffiConverterString.check_lower(new_identifier)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(legacy_issuer_identifier),
        _UniffiConverterString.lower(legacy_identifier),
        _UniffiConverterString.lower(new_identifier)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_resource_mapping_transaction(client: "LedgerClient",_from: "str",did: "str",legacy_issuer_identifier: "str",legacy_identifier: "str",new_identifier: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(legacy_issuer_identifier)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    _UniffiConverterString.check_lower(new_identifier)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_resource_mapping_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(legacy_issuer_identifier),
        _UniffiConverterString.lower(legacy_identifier),
        _UniffiConverterString.lower(new_identifier)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_schema_endorsing_data(client: "LedgerClient",schema: "Schema"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterTypeSchema.check_lower(schema)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterTypeSchema.lower(schema)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_create_schema_transaction(client: "LedgerClient",_from: "str",schema: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(schema)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_create_schema_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(schema)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_deactivate_did_endorsing_data(client: "LedgerClient",did: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_deactivate_did_transaction(client: "LedgerClient",_from: "str",did: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_deactivate_did_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_add_delegate_endorsing_data(client: "LedgerClient",did: "str",delegate_type: "str",delegate: "str",validity: "int"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(delegate_type)
    
    _UniffiConverterString.check_lower(delegate)
    
    _UniffiConverterUInt64.check_lower(validity)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(delegate_type),
        _UniffiConverterString.lower(delegate),
        _UniffiConverterUInt64.lower(validity)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_add_delegate_transaction(client: "LedgerClient",_from: "str",did: "str",delegate_type: "str",delegate: "str",validity: "int"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(delegate_type)
    
    _UniffiConverterString.check_lower(delegate)
    
    _UniffiConverterUInt64.check_lower(validity)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_add_delegate_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(delegate_type),
        _UniffiConverterString.lower(delegate),
        _UniffiConverterUInt64.lower(validity)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_change_owner_endorsing_data(client: "LedgerClient",did: "str",new_owner: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(new_owner)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(new_owner)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_change_owner_transaction(client: "LedgerClient",_from: "str",did: "str",new_owner: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(new_owner)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_change_owner_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(new_owner)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_revoke_attribute_endorsing_data(client: "LedgerClient",did: "str",attribute: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(attribute)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(attribute)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_revoke_attribute_transaction(client: "LedgerClient",_from: "str",did: "str",attribute: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(attribute)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_attribute_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(attribute)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_revoke_delegate_endorsing_data(client: "LedgerClient",did: "str",delegate_type: "str",delegate: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(delegate_type)
    
    _UniffiConverterString.check_lower(delegate)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(delegate_type),
        _UniffiConverterString.lower(delegate)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_revoke_delegate_transaction(client: "LedgerClient",_from: "str",did: "str",delegate_type: "str",delegate: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(delegate_type)
    
    _UniffiConverterString.check_lower(delegate)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_revoke_delegate_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(delegate_type),
        _UniffiConverterString.lower(delegate)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_set_attribute_endorsing_data(client: "LedgerClient",did: "str",attribute: "str",validity: "int"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(attribute)
    
    _UniffiConverterUInt64.check_lower(validity)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(attribute),
        _UniffiConverterUInt64.lower(validity)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_did_set_attribute_transaction(client: "LedgerClient",_from: "str",did: "str",attribute: "str",validity: "int"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(attribute)
    
    _UniffiConverterUInt64.check_lower(validity)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_did_set_attribute_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(attribute),
        _UniffiConverterUInt64.lower(validity)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_endorsement_transaction(client: "LedgerClient",_from: "str",endorsing_data: "TransactionEndorsingData"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterTypeTransactionEndorsingData.check_lower(endorsing_data)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_endorsement_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterTypeTransactionEndorsingData.lower(endorsing_data)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_did_changed_transaction(client: "LedgerClient",did: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_changed_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_did_events_query(client: "LedgerClient",did: "str",from_block: "typing.Optional[int]",to_block: "typing.Optional[int]"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterOptionalUInt64.check_lower(from_block)
    
    _UniffiConverterOptionalUInt64.check_lower(to_block)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_events_query(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterOptionalUInt64.lower(from_block),
        _UniffiConverterOptionalUInt64.lower(to_block)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeEventQuery.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_did_mapping_transaction(client: "LedgerClient",legacy_identifier: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_mapping_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(legacy_identifier)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_did_owner_transaction(client: "LedgerClient",did: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_did_owner_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_identity_nonce_transaction(client: "LedgerClient",identity: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(identity)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_identity_nonce_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(identity)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_resource_mapping_transaction(client: "LedgerClient",legacy_identifier: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(legacy_identifier)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_resource_mapping_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(legacy_identifier)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_role_transaction(client: "LedgerClient",account: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(account)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_role_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(account)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_get_validators_transaction(client: "LedgerClient"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_get_validators_transaction(
        _UniffiConverterTypeLedgerClient.lower(client)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_has_role_transaction(client: "LedgerClient",role: "int",account: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterUInt8.check_lower(role)
    
    _UniffiConverterString.check_lower(account)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_has_role_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterUInt8.lower(role),
        _UniffiConverterString.lower(account)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_remove_validator_transaction(client: "LedgerClient",_from: "str",validator_address: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(validator_address)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_remove_validator_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(validator_address)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_resolve_credential_definition_transaction(client: "LedgerClient",id: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(id)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_credential_definition_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(id)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_resolve_did_transaction(client: "LedgerClient",did: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_did_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_resolve_schema_transaction(client: "LedgerClient",id: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(id)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_resolve_schema_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(id)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_revoke_role_transaction(client: "LedgerClient",_from: "str",role: "int",account: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterUInt8.check_lower(role)
    
    _UniffiConverterString.check_lower(account)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_revoke_role_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterUInt8.lower(role),
        _UniffiConverterString.lower(account)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_update_did_endorsing_data(client: "LedgerClient",did: "str",did_doc: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(did_doc)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_endorsing_data(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(did_doc)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransactionEndorsingData.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def build_update_did_transaction(client: "LedgerClient",_from: "str",did: "str",did_doc: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterString.check_lower(did_doc)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_build_update_did_transaction(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(did),
        _UniffiConverterString.lower(did_doc)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeTransaction.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def credential_definition_from_string(string: "str") -> "CredentialDefinition":
    _UniffiConverterString.check_lower(string)
    
    return _UniffiConverterTypeCredentialDefinition.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_from_string,
        _UniffiConverterString.lower(string)))


def credential_definition_get_id(cred_def: "CredentialDefinition") -> "str":
    _UniffiConverterTypeCredentialDefinition.check_lower(cred_def)
    
    return _UniffiConverterString.lift(_rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_get_id,
        _UniffiConverterTypeCredentialDefinition.lower(cred_def)))


def credential_definition_to_string(data: "CredentialDefinition") -> "str":
    _UniffiConverterTypeCredentialDefinition.check_lower(data)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_credential_definition_to_string,
        _UniffiConverterTypeCredentialDefinition.lower(data)))


def parse_did_attribute_changed_event_response(client: "LedgerClient",log: "EventLog") -> "DidAttributeChanged":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterTypeEventLog.check_lower(log)
    
    return _UniffiConverterTypeDidAttributeChanged.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_attribute_changed_event_response,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterTypeEventLog.lower(log)))


def parse_did_changed_result(client: "LedgerClient",bytes: "bytes") -> "int":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterUInt64.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_changed_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_did_delegate_changed_event_response(client: "LedgerClient",log: "EventLog") -> "DidDelegateChanged":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterTypeEventLog.check_lower(log)
    
    return _UniffiConverterTypeDidDelegateChanged.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_delegate_changed_event_response,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterTypeEventLog.lower(log)))


def parse_did_event_response(client: "LedgerClient",log: "EventLog") -> "DidEvents":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterTypeEventLog.check_lower(log)
    
    return _UniffiConverterTypeDidEvents.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_event_response,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterTypeEventLog.lower(log)))


def parse_did_mapping_result(client: "LedgerClient",bytes: "bytes") -> "str":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_mapping_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_did_nonce_result(client: "LedgerClient",bytes: "bytes") -> "int":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterUInt64.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_nonce_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_did_owner_changed_event_response(client: "LedgerClient",log: "EventLog") -> "DidOwnerChanged":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterTypeEventLog.check_lower(log)
    
    return _UniffiConverterTypeDidOwnerChanged.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_changed_event_response,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterTypeEventLog.lower(log)))


def parse_did_owner_result(client: "LedgerClient",bytes: "bytes") -> "str":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_did_owner_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_get_role_result(client: "LedgerClient",bytes: "bytes") -> "int":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterUInt8.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_role_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_get_validators_result(client: "LedgerClient",bytes: "bytes") -> "JsonValue":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterTypeJsonValue.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_get_validators_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_has_role_result(client: "LedgerClient",bytes: "bytes") -> "bool":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterBool.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_has_role_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_resolve_credential_definition_result(client: "LedgerClient",bytes: "bytes") -> "JsonValue":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterTypeJsonValue.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_credential_definition_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_resolve_did_result(client: "LedgerClient",bytes: "bytes") -> "JsonValue":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterTypeJsonValue.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_did_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_resolve_schema_result(client: "LedgerClient",bytes: "bytes") -> "JsonValue":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterTypeJsonValue.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resolve_schema_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def parse_resource_mapping_result(client: "LedgerClient",bytes: "bytes") -> "str":
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterBytes.check_lower(bytes)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_parse_resource_mapping_result,
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterBytes.lower(bytes)))


def resolve_credential_definition(client: "LedgerClient",id: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(id)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_credential_definition(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(id)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeCredentialDefinition.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def resolve_did(client: "LedgerClient",did: "str",options: "typing.Optional[DidResolutionOptions]"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(did)
    
    _UniffiConverterOptionalTypeDidResolutionOptions.check_lower(options)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_did(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(did),
        _UniffiConverterOptionalTypeDidResolutionOptions.lower(options)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeJsonValue.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def resolve_schema(client: "LedgerClient",id: "str"):
    _UniffiConverterTypeLedgerClient.check_lower(client)
    
    _UniffiConverterString.check_lower(id)
    
    return _uniffi_rust_call_async(
        _UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_resolve_schema(
        _UniffiConverterTypeLedgerClient.lower(client),
        _UniffiConverterString.lower(id)),
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_poll_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_complete_rust_buffer,
        _UniffiLib.ffi_indy_besu_vdr_uniffi_rust_future_free_rust_buffer,
        # lift function
        _UniffiConverterTypeSchema.lift,
        # Error FFI converter
        _UniffiConverterTypeVdrError,
    )

def schema_from_string(string: "str") -> "Schema":
    _UniffiConverterString.check_lower(string)
    
    return _UniffiConverterTypeSchema.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_from_string,
        _UniffiConverterString.lower(string)))


def schema_get_id(schema: "Schema") -> "str":
    _UniffiConverterTypeSchema.check_lower(schema)
    
    return _UniffiConverterString.lift(_rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_get_id,
        _UniffiConverterTypeSchema.lower(schema)))


def schema_to_string(data: "Schema") -> "str":
    _UniffiConverterTypeSchema.check_lower(data)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_schema_to_string,
        _UniffiConverterTypeSchema.lower(data)))


def transaction_create(type: "TransactionType",to: "str",_from: "typing.Optional[str]",nonce: "typing.Optional[int]",chain_id: "int",data: "bytes",signature: "typing.Optional[SignatureData]",hash: "typing.Optional[bytes]") -> "Transaction":
    _UniffiConverterTypeTransactionType.check_lower(type)
    
    _UniffiConverterString.check_lower(to)
    
    _UniffiConverterOptionalString.check_lower(_from)
    
    _UniffiConverterOptionalUInt64.check_lower(nonce)
    
    _UniffiConverterUInt64.check_lower(chain_id)
    
    _UniffiConverterBytes.check_lower(data)
    
    _UniffiConverterOptionalTypeSignatureData.check_lower(signature)
    
    _UniffiConverterOptionalBytes.check_lower(hash)
    
    return _UniffiConverterTypeTransaction.lift(_rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_create,
        _UniffiConverterTypeTransactionType.lower(type),
        _UniffiConverterString.lower(to),
        _UniffiConverterOptionalString.lower(_from),
        _UniffiConverterOptionalUInt64.lower(nonce),
        _UniffiConverterUInt64.lower(chain_id),
        _UniffiConverterBytes.lower(data),
        _UniffiConverterOptionalTypeSignatureData.lower(signature),
        _UniffiConverterOptionalBytes.lower(hash)))


def transaction_endorsing_data_create(to: "str",_from: "str",contract: "str",method: "str",endorsing_method: "str",params: "typing.List[JsonValue]",nonce: "typing.Optional[int]",signature: "typing.Optional[SignatureData]") -> "TransactionEndorsingData":
    _UniffiConverterString.check_lower(to)
    
    _UniffiConverterString.check_lower(_from)
    
    _UniffiConverterString.check_lower(contract)
    
    _UniffiConverterString.check_lower(method)
    
    _UniffiConverterString.check_lower(endorsing_method)
    
    _UniffiConverterSequenceTypeJsonValue.check_lower(params)
    
    _UniffiConverterOptionalUInt64.check_lower(nonce)
    
    _UniffiConverterOptionalTypeSignatureData.check_lower(signature)
    
    return _UniffiConverterTypeTransactionEndorsingData.lift(_rust_call(_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_create,
        _UniffiConverterString.lower(to),
        _UniffiConverterString.lower(_from),
        _UniffiConverterString.lower(contract),
        _UniffiConverterString.lower(method),
        _UniffiConverterString.lower(endorsing_method),
        _UniffiConverterSequenceTypeJsonValue.lower(params),
        _UniffiConverterOptionalUInt64.lower(nonce),
        _UniffiConverterOptionalTypeSignatureData.lower(signature)))


def transaction_endorsing_data_from_string(value: "str") -> "TransactionEndorsingData":
    _UniffiConverterString.check_lower(value)
    
    return _UniffiConverterTypeTransactionEndorsingData.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_from_string,
        _UniffiConverterString.lower(value)))


def transaction_endorsing_data_get_signing_bytes(data: "TransactionEndorsingData") -> "bytes":
    _UniffiConverterTypeTransactionEndorsingData.check_lower(data)
    
    return _UniffiConverterBytes.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_get_signing_bytes,
        _UniffiConverterTypeTransactionEndorsingData.lower(data)))


def transaction_endorsing_data_to_string(data: "TransactionEndorsingData") -> "str":
    _UniffiConverterTypeTransactionEndorsingData.check_lower(data)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_endorsing_data_to_string,
        _UniffiConverterTypeTransactionEndorsingData.lower(data)))


def transaction_from_string(value: "str") -> "Transaction":
    _UniffiConverterString.check_lower(value)
    
    return _UniffiConverterTypeTransaction.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_from_string,
        _UniffiConverterString.lower(value)))


def transaction_get_signing_bytes(data: "Transaction") -> "bytes":
    _UniffiConverterTypeTransaction.check_lower(data)
    
    return _UniffiConverterBytes.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_get_signing_bytes,
        _UniffiConverterTypeTransaction.lower(data)))


def transaction_to_string(data: "Transaction") -> "str":
    _UniffiConverterTypeTransaction.check_lower(data)
    
    return _UniffiConverterString.lift(_rust_call_with_error(_UniffiConverterTypeVdrError,_UniffiLib.uniffi_indy_besu_vdr_uniffi_fn_func_transaction_to_string,
        _UniffiConverterTypeTransaction.lower(data)))


__all__ = [
    "InternalError",
    "DidEvents",
    "Status",
    "TransactionType",
    "VdrError",
    "ContractConfig",
    "ContractSpec",
    "CredentialDefinition",
    "DidAttributeChanged",
    "DidDelegateChanged",
    "DidOwnerChanged",
    "DidResolutionOptions",
    "EventLog",
    "EventQuery",
    "PingStatus",
    "QuorumConfig",
    "Schema",
    "SignatureData",
    "Transaction",
    "TransactionEndorsingData",
    "build_add_validator_transaction",
    "build_assign_role_transaction",
    "build_create_credential_definition_endorsing_data",
    "build_create_credential_definition_transaction",
    "build_create_did_endorsing_data",
    "build_create_did_mapping_endorsing_data",
    "build_create_did_mapping_transaction",
    "build_create_did_transaction",
    "build_create_resource_mapping_endorsing_data",
    "build_create_resource_mapping_transaction",
    "build_create_schema_endorsing_data",
    "build_create_schema_transaction",
    "build_deactivate_did_endorsing_data",
    "build_deactivate_did_transaction",
    "build_did_add_delegate_endorsing_data",
    "build_did_add_delegate_transaction",
    "build_did_change_owner_endorsing_data",
    "build_did_change_owner_transaction",
    "build_did_revoke_attribute_endorsing_data",
    "build_did_revoke_attribute_transaction",
    "build_did_revoke_delegate_endorsing_data",
    "build_did_revoke_delegate_transaction",
    "build_did_set_attribute_endorsing_data",
    "build_did_set_attribute_transaction",
    "build_endorsement_transaction",
    "build_get_did_changed_transaction",
    "build_get_did_events_query",
    "build_get_did_mapping_transaction",
    "build_get_did_owner_transaction",
    "build_get_identity_nonce_transaction",
    "build_get_resource_mapping_transaction",
    "build_get_role_transaction",
    "build_get_validators_transaction",
    "build_has_role_transaction",
    "build_remove_validator_transaction",
    "build_resolve_credential_definition_transaction",
    "build_resolve_did_transaction",
    "build_resolve_schema_transaction",
    "build_revoke_role_transaction",
    "build_update_did_endorsing_data",
    "build_update_did_transaction",
    "credential_definition_from_string",
    "credential_definition_get_id",
    "credential_definition_to_string",
    "parse_did_attribute_changed_event_response",
    "parse_did_changed_result",
    "parse_did_delegate_changed_event_response",
    "parse_did_event_response",
    "parse_did_mapping_result",
    "parse_did_nonce_result",
    "parse_did_owner_changed_event_response",
    "parse_did_owner_result",
    "parse_get_role_result",
    "parse_get_validators_result",
    "parse_has_role_result",
    "parse_resolve_credential_definition_result",
    "parse_resolve_did_result",
    "parse_resolve_schema_result",
    "parse_resource_mapping_result",
    "resolve_credential_definition",
    "resolve_did",
    "resolve_schema",
    "schema_from_string",
    "schema_get_id",
    "schema_to_string",
    "transaction_create",
    "transaction_endorsing_data_create",
    "transaction_endorsing_data_from_string",
    "transaction_endorsing_data_get_signing_bytes",
    "transaction_endorsing_data_to_string",
    "transaction_from_string",
    "transaction_get_signing_bytes",
    "transaction_to_string",
    "LedgerClient",
]

